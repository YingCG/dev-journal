{"ast":null,"code":"var _jsxFileName = \"/Users/yingchiu/Projects/dev-journal-ying/src/components/Square.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  _s();\n\n  const pallete = ['#E4EFE7', '#D6E5FA', '#D4E2D4', '#D9D7F1', '#F3F1F5', '#7EB5A6', '#CEE5D0', '#EDF6E5', '#F0D9FF', '#F4F9F9', '#D3DEDC', '#E4D8DC', '#FEFBF3', '#93B5C6', '#F7F2E7', '#C9CCD5', '#FFFDDE', '#F0ECE3', '#CDF2CA', '#FFEFEF'];\n  const [color, setColor] = useState(props.color);\n\n  function changeColor() {\n    const newColor = pallete[Math.floor(Math.random() * pallete.length)];\n    setColor(newColor);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: {\n      backgroundColor: color\n    },\n    onClick: () => changeColor(),\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.info.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", props.info.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), props.info.links.map((link, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: link.url,\n        target: \"_blank\",\n        children: link.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 88\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 52\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Square, \"DVb+Wf/IhmtUM5m92EfCN2kWUDQ=\");\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/yingchiu/Projects/dev-journal-ying/src/components/Square.jsx"],"names":["React","useState","Link","Square","props","pallete","color","setColor","changeColor","newColor","Math","floor","random","length","backgroundColor","info","title","description","links","map","link","index","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAMC,OAAO,GAAG,CAAC,SAAD,EAAW,SAAX,EAAsB,SAAtB,EAAgC,SAAhC,EAA0C,SAA1C,EAAqD,SAArD,EAAgE,SAAhE,EAA0E,SAA1E,EAAqF,SAArF,EAA+F,SAA/F,EAAyG,SAAzG,EAAoH,SAApH,EAA+H,SAA/H,EAAyI,SAAzI,EAAoJ,SAApJ,EAA+J,SAA/J,EAA0K,SAA1K,EAAqL,SAArL,EAA+L,SAA/L,EAA0M,SAA1M,CAAhB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACG,KAAK,CAACE,KAAP,CAAlC;;AAEA,WAASE,WAAT,GAAuB;AACnB,UAAMC,QAAQ,GAAGJ,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,OAAO,CAACQ,MAAnC,CAAD,CAAxB;AACAN,IAAAA,QAAQ,CAAEE,QAAF,CAAR;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACK,MAAAA,eAAe,EAAGR;AAAnB,KAA/B;AAA0D,IAAA,OAAO,EAAE,MAAME,WAAW,EAApF;AAAA,4BACI;AAAA,gBAAKJ,KAAK,CAACW,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAQZ,KAAK,CAACW,IAAN,CAAWE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKb,KAAK,CAACW,IAAN,CAAWG,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAoB,MAAA,SAAS,EAAC,KAA9B;AAAA,6BAAoC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAED,IAAI,CAACE,GAAf;AAAoB,QAAA,MAAM,EAAC,QAA3B;AAAA,kBAAqCF,IAAI,CAACJ;AAA1C;AAAA;AAAA;AAAA;AAAA;AAApC,OAAaK,KAAb;AAAA;AAAA;AAAA;AAAA,YAAtC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAhBQlB,M;;KAAAA,M;AAkBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction Square(props) {\n    \n    const pallete = ['#E4EFE7','#D6E5FA', '#D4E2D4','#D9D7F1','#F3F1F5', '#7EB5A6', '#CEE5D0','#EDF6E5', '#F0D9FF','#F4F9F9','#D3DEDC', '#E4D8DC', '#FEFBF3','#93B5C6', '#F7F2E7', '#C9CCD5', '#FFFDDE', '#F0ECE3','#CDF2CA', '#FFEFEF']\n    const [color, setColor] = useState(props.color)\n\n    function changeColor() {\n        const newColor = pallete[Math.floor(Math.random() * pallete.length)]\n        setColor (newColor)\n    }\n    return (\n        <div className='square' style={{backgroundColor : color}} onClick={() => changeColor()}>\n            <h3>{props.info.title}</h3>\n            <span> {props.info.description}</span>\n            {props.info.links.map((link, index) => <button key={index} className='btn'><Link to={link.url} target='_blank'>{link.title}</Link></button>)}\n        </div>\n    )\n}\n\nexport default Square\n"]},"metadata":{},"sourceType":"module"}