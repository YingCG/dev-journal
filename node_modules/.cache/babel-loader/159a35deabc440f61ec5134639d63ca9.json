{"ast":null,"code":"// import React from 'react'\n// function JsBasic () {\n//     return (\n//       <>\n//       <div>\n//        <div className=\"Content-question-answer\">\n//     {/* <!-- An analogy to describe the differences between HTML and CSS --> */}\n//     <div className=\"question\">JavaScript and its relationship to HTML and CSS</div>\n//            <div className=\"oneColum\">\n//           <h4>HTML</h4>\n//             To build the architecture of a website.\n//           <h4>CSS </h4>\n//             To apply styles of the space. We specify the layout according to the moodboard and concept we are achieving. \n//           <h4>JavaScript</h4>\n//             Like connect to the electric and water supply, all this little behaviour to make beautiful space better experience while enjoy and stay.\n//             JavaScript can access and change HTML elements,HTML attributes and CSS styles of a website. \n//     </div>\n//     {/* <!-- Control Flow & loop --> */}\n//     <div className=\"question\">Control Flow &amp; Loop</div>\n//       <div className =\"answer-list\">\n//         <div className=\"answer\">\n//           <h4>Control Flow </h4>\n//           <p>Use to execution code only under certain conditions. </p>\n//           <ul>\n//           <li className=\"InlineLayout\">Conditional statement</li>\n//           <li className=\"InlineLayout\">Execute statement</li>\n//           <li className=\"InlineLayout\">True or false</li>\n//         </ul>    \n//         < className=\"code-Example\"> \n//           <h4>If  |  else if  |  else</h4>\n//           <h5>Quite often have a var/ object on top to give the function working</h5>\n//               var = newDate();<br/>\n//               var hrs = myDate.getHours();<br/>\n//               var greet;<br/>\n//               <br/>\n//               <h5>// if set the condition to return true</h5>\n//               if (hrs &lt; 12){<br/>\n//                greet =\"Good Morning\";<br/>\n//                <h5>// code block to be executed if statement is true</h5>\n//               }<br/><br/>\n//               else if(hrs &gt;=12 &amp;&amp; hrs &lt; 17){<br/>\n//               greet =\"Good Afternoon\";<br/>\n//               <h5>// code block to be executed if statement is true</h5>\n//               }<br/><br/>\n//               else{\n//               <h5>// code block to be executed if statement is true</h5>\n//               }\n//         </div>\n//       </div>\n//         <div className=\"answer\">\n//           <h4>Loop</h4>\n//           <p>Loop through a block of code a number of times while the condition is true</p>\n//             <div className=\"split\">\n//               <div className=\"code-Example\"> \n//                 <h4>for</h4>\n//                 for(&#10122;let i=0; &#10123;i &lt; length; &#10124;i++)<br/>\n//                 { &#10125; return\n//                   <h5>//  code block to be executed</h5>\n//                 }\n//               </div>\n//               <div className=\"code-Example\"> \n//                 <h4>while</h4>\n//                 &#10122; let i=0<br/>\n//               while (&#10123;i &lt; length)<br/>\n//               { &#10125; return\n//                 <h5>//  code block to be executed</h5>\n//                 &#10124;i++<br/>\n//               }\n//               </div>\n//             </div> \n//             <div className=\"split\">\n//               <div className=\"code-Example\"> \n//                 <br/>\n//                 <h4>for...in  |  for...of  |  forEach</h4>\n//                 const array=['a', 'b', 'c'];<br/>\n//                 for (key in object){\n//                   <h5>// code block to be executed</h5>\n//                 }\n//               </div>\n//               <div className=\"code-Example\"> \n//                 <p>ForEach goes by value and calls a callback function <br/>\n//                   For of goes by value<br/><br/>\n//                   For in goes by index<br/>\n//                   when used on objects, for in goes by properties</p>\n//               </div>\n//             </div>\n//           <p>Plus plus or minus munis behave different infront or behind</p>\n//           <div className=\"split\">\n//             <div className=\"code-Example\"> \n//                 x = 2; <br/>\n//                 y = x++;<br/>\n//                 {<h5>here y is 2, x is 3</h5>}\n//             </div>\n//             <div className=\"code-Example\"> \n//               x = 2; <br/>\n//               y = ++x;<br/>\n//               {<h5>here y is 3, x is 2</h5>}\n//               </div>\n//             </div>\n//         </div>\n//       </div>\n//     </div>\n//     {/* // <!-- Describe what the DOM is and an example of how you might interact with it. --> */}\n//     <div className=\"question\" id=\"DOM-Square\">The DOM</div> \n//         <div className =\"answer-list\">\n//           <div className=\"answer\">\n//             <h4>Document Object Model </h4>\n//             <p> HTML DOM allows JavaScript to react to HTML event by defining the all elements in a website as objects. To access the objects, or its properties, we method.          \n//               <h4>Steps to manipulate DOM: </h4>\n//                   1. Using selector to choose the HTML object or properties.<br/>\n//                   2. Add the event listener<br/>\n//                   3. To assign an event handler<br/>\n//                   4. We calling the event handler from where it need to happens.</p>\n//               <h4>Commom method we use as Selector:</h4>\n//               <ul>\n//                 <li className=\"InlineLayout\">this</li>\n//                 <li className=\"InlineLayout\">getElementByTagName</li>\n//                 <li className=\"InlineLayout\">getElementByclassNameName</li>\n//                 <li className=\"InlineLayout\">getElementById</li>\n//                 <li className=\"InlineLayout\">querySelector</li>\n//                 <li className=\"InlineLayout\">querySelectorAll</li>\n//               </ul>\n//           </div>\n//         <div className=\"answer\">\n//           <h4>Commom Event listerner:</h4>\n//           <ul>\n//             <li className=\"InlineLayout\">'onload'</li>\n//             <li className=\"InlineLayout\">'click'</li>\n//             <li className=\"InlineLayout\">'onclick'</li>\n//             <li className=\"InlineLayout\">'mouseover'</li>\n//             <li className=\"InlineLayout\">'mouseout'</li>\n//             <li className=\"InlineLayout\">'toggel'</li>\n//           </ul>\n//           <h4>To change the selected object:</h4>\n//               <ul>\n//               <li className=\"InlineLayout\">element.innerHTML</li>\n//               <li className=\"InlineLayout\">element.attribute</li>\n//               <li className=\"InlineLayout\">element.style.property</li>\n//               <li className=\"InlineLayout\">element.setAttribute(attribute, value)</li>\n//           </ul>\n//         </div>\n// </div>\n//     {/* // <!-- Explain the difference between accessing data from arrays and objects. --> */}\n//     <div className=\"question\" id=\"Arrays-Objects-Square\">Objects and Arrays</div>\n//     {/* // <!-- <div className=\"invisible\" id=\"Arrays-Objects-answer\">Arrays and Objects</div> --> */}\n//     <div className =\"answer-list\">\n//         <div className=\"twoColumn\">\n//           <h4>Objects </h4>\n//           A list of properties consist key and value\n//             <li className=\"InlineLayout\">var</li>\n//             <li className=\"InlineLayout\">const</li>\n//             <li className=\"InlineLayout\">let</li>\n//             <p className=\"code-Example\"> \n//               var person ={ <br/>\n//                 key: value,<br/>\n//                 name: JavaScript,<br/>\n//                 level: 1<br/>\n//               };\n//             </p>\n//   </div>\n//         <div className=\"twoColumn\"><h4>Arrays</h4>\n//           Store a list of items or objects in a single variable, useful when creating orderded colletions. Item can be added and removed from beginning or end of an array using:\n//           <ul>\n//             <li className=\"InlineLayout\">push()</li>\n//             <li className=\"InlineLayout\">pop()</li>\n//             <li className=\"InlineLayout\">unshift()</li>\n//             <li className=\"InlineLayout\">shift()</li>\n//             </ul>\n//             <div className=\"code-Example\"> \n//               var weekdays ={'Monday','Tuesday','Wednesday','Thursday','Friday' };\n//             </div>\n//         </div>  \n// </div>\n//     {/* // <!-- <div className=\"invisible\" id=\"Accessing-answer\">Difference between accessing data from arrays and objects</div> --> */}\n//     <div className=\"question\" id=\"Accessing-Square\">Accessing data from arrays and objects</div>\n//       <div className =\"answer-list\">\n//         <div className=\"twoColumn\"><h4>To access Objects </h4>\n//           Using dot. or br/acket [ ]notation<br/><br/>\n//           <div className=\"code-Example\">\n//             <h4>dot(.) </h4>\n//             object.key <h5>// return value</h5><br/>\n//             <h4>br/acket [ ] </h4>       \n//             object['key'] <h5>// return value</h5>\n//           </div>\n//         </div>\n//         <div className=\"twoColumn\"><h4>To access Arrays</h4>\n//           using br/acket [ ] select index number start from 0<br/><br/>\n//           <div className=\"code-Example\">\n//             <h4>br/acket [ index number ] </h4>       \n//             arrayList[0] \n//             <h5>// return first element in array</h5>\n//           </div>\n//         </div>\n//       </div>\n// {/* //   <!-- Explain what functions are and why they are useful. --> */}\n//   <div className=\"question\" id=\"Functions-Square\">Functions and why they are useful</div>\n//     <div className =\"answer-list\">\n//       <div className =\"answer\">\n//         <p>Function group code together<br/>\n//         Function reuse the group of code<br/>\n//         Function can take argument, can return value<br/>\n//         There are function without argument, one argument and multiple argument<br/>\n//         </p>\n//         <h4>function () can write as () =&gt;</h4>\n//         <p>\n//         A parameter is the variable listed inside the parentheses in the function definition.</p>\n//         <p>\n//         An argument is the value that is sent to the function when it is called.</p>\n//         </div>\n//         <div className =\"answer\">\n//             <div className=\"code-Example\">\n//               <h5>// First way to write Function</h5>\n//               function add(a, b){<br/>\n//                 return a + b + 100;<br/>\n//               }\n//                 <h5>// Second way to write Function</h5>\n//                 var add = function(a, b) {<br/>\n//                   return a + b;<br/>\n//                 };\n//                 <h5>// Third way to write Arrow Function</h5>\n//                 (a, b) =&gt; a + b + 100;\n//                 <h5>// Function without arguments</h5>\n//                 let a = 4;<br/>\n//                 let b = 2;<br/>\n//                 () =&gt; a + b + 100;\n//                 <h5>\n//                 function (){return a + b + 100;}</h5>\n//               </div>\n//               </div>\n//               </div>\n//               </div>\n//       </>\n//     )\n//   }\n// export default JsBasic","map":{"version":3,"sources":["/Users/yingchiu/Projects/yingcg/src/components/JsBasic.jsx"],"names":[],"mappingssourcesContent":["// import React from 'react'\n\n// function JsBasic () {\n\n//     return (\n//       <>\n//       <div>\n//        <div className=\"Content-question-answer\">\n//     {/* <!-- An analogy to describe the differences between HTML and CSS --> */}\n//     <div className=\"question\">JavaScript and its relationship to HTML and CSS</div>\n//            <div className=\"oneColum\">\n//           <h4>HTML</h4>\n//             To build the architecture of a website.\n//           <h4>CSS </h4>\n//             To apply styles of the space. We specify the layout according to the moodboard and concept we are achieving. \n//           <h4>JavaScript</h4>\n//             Like connect to the electric and water supply, all this little behaviour to make beautiful space better experience while enjoy and stay.\n//             JavaScript can access and change HTML elements,HTML attributes and CSS styles of a website. \n//     </div>\n\n  \n//     {/* <!-- Control Flow & loop --> */}\n//     <div className=\"question\">Control Flow &amp; Loop</div>\n//       <div className =\"answer-list\">\n//         <div className=\"answer\">\n//           <h4>Control Flow </h4>\n//           <p>Use to execution code only under certain conditions. </p>\n//           <ul>\n//           <li className=\"InlineLayout\">Conditional statement</li>\n//           <li className=\"InlineLayout\">Execute statement</li>\n//           <li className=\"InlineLayout\">True or false</li>\n//         </ul>    \n        \n//         < className=\"code-Example\"> \n//           <h4>If  |  else if  |  else</h4>\n//           <h5>Quite often have a var/ object on top to give the function working</h5>\n//               var = newDate();<br/>\n//               var hrs = myDate.getHours();<br/>\n//               var greet;<br/>\n//               <br/>\n//               <h5>// if set the condition to return true</h5>\n//               if (hrs &lt; 12){<br/>\n//                greet =\"Good Morning\";<br/>\n//                <h5>// code block to be executed if statement is true</h5>\n//               }<br/><br/>\n//               else if(hrs &gt;=12 &amp;&amp; hrs &lt; 17){<br/>\n//               greet =\"Good Afternoon\";<br/>\n//               <h5>// code block to be executed if statement is true</h5>\n//               }<br/><br/>\n//               else{\n//               <h5>// code block to be executed if statement is true</h5>\n//               }\n//         </div>\n//       </div>\n\n//         <div className=\"answer\">\n//           <h4>Loop</h4>\n//           <p>Loop through a block of code a number of times while the condition is true</p>\n//             <div className=\"split\">\n//               <div className=\"code-Example\"> \n//                 <h4>for</h4>\n//                 for(&#10122;let i=0; &#10123;i &lt; length; &#10124;i++)<br/>\n//                 { &#10125; return\n//                   <h5>//  code block to be executed</h5>\n//                 }\n//               </div>\n\n            \n//               <div className=\"code-Example\"> \n//                 <h4>while</h4>\n//                 &#10122; let i=0<br/>\n//               while (&#10123;i &lt; length)<br/>\n//               { &#10125; return\n//                 <h5>//  code block to be executed</h5>\n//                 &#10124;i++<br/>\n//               }\n//               </div>\n\n            \n//             </div> \n//             <div className=\"split\">\n//               <div className=\"code-Example\"> \n//                 <br/>\n//                 <h4>for...in  |  for...of  |  forEach</h4>\n//                 const array=['a', 'b', 'c'];<br/>\n//                 for (key in object){\n//                   <h5>// code block to be executed</h5>\n//                 }\n//               </div>\n//               <div className=\"code-Example\"> \n//                 <p>ForEach goes by value and calls a callback function <br/>\n//                   For of goes by value<br/><br/>\n//                   For in goes by index<br/>\n//                   when used on objects, for in goes by properties</p>\n//               </div>\n//             </div>\n\n//           <p>Plus plus or minus munis behave different infront or behind</p>\n\n//           <div className=\"split\">\n//             <div className=\"code-Example\"> \n//                 x = 2; <br/>\n//                 y = x++;<br/>\n//                 {<h5>here y is 2, x is 3</h5>}\n//             </div>\n\n//             <div className=\"code-Example\"> \n//               x = 2; <br/>\n//               y = ++x;<br/>\n//               {<h5>here y is 3, x is 2</h5>}\n//               </div>\n//             </div>\n\n//         </div>\n//       </div>\n//     </div>\n\n//     {/* // <!-- Describe what the DOM is and an example of how you might interact with it. --> */}\n//     <div className=\"question\" id=\"DOM-Square\">The DOM</div> \n//         <div className =\"answer-list\">\n//           <div className=\"answer\">\n//             <h4>Document Object Model </h4>\n//             <p> HTML DOM allows JavaScript to react to HTML event by defining the all elements in a website as objects. To access the objects, or its properties, we method.          \n//               <h4>Steps to manipulate DOM: </h4>\n//                   1. Using selector to choose the HTML object or properties.<br/>\n//                   2. Add the event listener<br/>\n//                   3. To assign an event handler<br/>\n//                   4. We calling the event handler from where it need to happens.</p>\n          \n//               <h4>Commom method we use as Selector:</h4>\n//               <ul>\n//                 <li className=\"InlineLayout\">this</li>\n//                 <li className=\"InlineLayout\">getElementByTagName</li>\n//                 <li className=\"InlineLayout\">getElementByclassNameName</li>\n//                 <li className=\"InlineLayout\">getElementById</li>\n//                 <li className=\"InlineLayout\">querySelector</li>\n//                 <li className=\"InlineLayout\">querySelectorAll</li>\n//               </ul>\n//           </div>\n//         <div className=\"answer\">\n//           <h4>Commom Event listerner:</h4>\n//           <ul>\n//             <li className=\"InlineLayout\">'onload'</li>\n//             <li className=\"InlineLayout\">'click'</li>\n//             <li className=\"InlineLayout\">'onclick'</li>\n//             <li className=\"InlineLayout\">'mouseover'</li>\n//             <li className=\"InlineLayout\">'mouseout'</li>\n//             <li className=\"InlineLayout\">'toggel'</li>\n//           </ul>\n          \n//           <h4>To change the selected object:</h4>\n//               <ul>\n//               <li className=\"InlineLayout\">element.innerHTML</li>\n//               <li className=\"InlineLayout\">element.attribute</li>\n//               <li className=\"InlineLayout\">element.style.property</li>\n//               <li className=\"InlineLayout\">element.setAttribute(attribute, value)</li>\n//           </ul>\n//         </div>\n// </div>\n//     {/* // <!-- Explain the difference between accessing data from arrays and objects. --> */}\n//     <div className=\"question\" id=\"Arrays-Objects-Square\">Objects and Arrays</div>\n//     {/* // <!-- <div className=\"invisible\" id=\"Arrays-Objects-answer\">Arrays and Objects</div> --> */}\n//     <div className =\"answer-list\">\n//         <div className=\"twoColumn\">\n//           <h4>Objects </h4>\n//           A list of properties consist key and value\n//             <li className=\"InlineLayout\">var</li>\n//             <li className=\"InlineLayout\">const</li>\n//             <li className=\"InlineLayout\">let</li>\n \n//             <p className=\"code-Example\"> \n//               var person ={ <br/>\n//                 key: value,<br/>\n//                 name: JavaScript,<br/>\n//                 level: 1<br/>\n//               };\n//             </p>\n//   </div>\n//         <div className=\"twoColumn\"><h4>Arrays</h4>\n//           Store a list of items or objects in a single variable, useful when creating orderded colletions. Item can be added and removed from beginning or end of an array using:\n//           <ul>\n//             <li className=\"InlineLayout\">push()</li>\n//             <li className=\"InlineLayout\">pop()</li>\n//             <li className=\"InlineLayout\">unshift()</li>\n//             <li className=\"InlineLayout\">shift()</li>\n//             </ul>\n//             <div className=\"code-Example\"> \n//               var weekdays ={'Monday','Tuesday','Wednesday','Thursday','Friday' };\n//             </div>\n//         </div>  \n// </div>\n\n//     {/* // <!-- <div className=\"invisible\" id=\"Accessing-answer\">Difference between accessing data from arrays and objects</div> --> */}\n//     <div className=\"question\" id=\"Accessing-Square\">Accessing data from arrays and objects</div>\n//       <div className =\"answer-list\">\n      \n//         <div className=\"twoColumn\"><h4>To access Objects </h4>\n//           Using dot. or br/acket [ ]notation<br/><br/>\n//           <div className=\"code-Example\">\n//             <h4>dot(.) </h4>\n//             object.key <h5>// return value</h5><br/>\n\n//             <h4>br/acket [ ] </h4>       \n//             object['key'] <h5>// return value</h5>\n//           </div>\n//         </div>\n\n//         <div className=\"twoColumn\"><h4>To access Arrays</h4>\n//           using br/acket [ ] select index number start from 0<br/><br/>\n//           <div className=\"code-Example\">\n//             <h4>br/acket [ index number ] </h4>       \n//             arrayList[0] \n//             <h5>// return first element in array</h5>\n//           </div>\n//         </div>\n//       </div>\n\n// {/* //   <!-- Explain what functions are and why they are useful. --> */}\n//   <div className=\"question\" id=\"Functions-Square\">Functions and why they are useful</div>\n//     <div className =\"answer-list\">\n\n//       <div className =\"answer\">\n//         <p>Function group code together<br/>\n//         Function reuse the group of code<br/>\n//         Function can take argument, can return value<br/>\n//         There are function without argument, one argument and multiple argument<br/>\n//         </p>\n//         <h4>function () can write as () =&gt;</h4>\n\n//         <p>\n//         A parameter is the variable listed inside the parentheses in the function definition.</p>\n//         <p>\n//         An argument is the value that is sent to the function when it is called.</p>\n\n//         </div>\n//         <div className =\"answer\">\n//             <div className=\"code-Example\">\n//               <h5>// First way to write Function</h5>\n//               function add(a, b){<br/>\n//                 return a + b + 100;<br/>\n//               }\n            \n//                 <h5>// Second way to write Function</h5>\n//                 var add = function(a, b) {<br/>\n//                   return a + b;<br/>\n//                 };\n//                 <h5>// Third way to write Arrow Function</h5>\n//                 (a, b) =&gt; a + b + 100;\n\n//                 <h5>// Function without arguments</h5>\n//                 let a = 4;<br/>\n//                 let b = 2;<br/>\n//                 () =&gt; a + b + 100;\n//                 <h5>\n//                 function (){return a + b + 100;}</h5>\n//               </div>\n//               </div>\n//               </div>\n//               </div>\n//       </>\n//     )\n//   }\n\n\n// export default JsBasic\n"]},"metadata":{},"sourceType":"module"}